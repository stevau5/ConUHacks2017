{"version":3,"sources":["webpack:///webpack/bootstrap 8124203d66429dbde525","webpack:///external \"watson-developer-cloud\"","webpack:///./resources/assets/js/routes/conversation.js"],"names":["watson","require","conversation","version_date","version","updateMessage","input","response","responseText","output","intents","intent","confidence","text","module","exports","app","post","req","res","next","workspace","process","env","WORKSPACE_ID","json","payload","workspace_id","context","body","message","error","data"],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;AAEA;AACA;;;;;;;;AC7DA,mD;;;;;;;;;;ACAA,IAAMA,SAAS,mBAAAC,CAAQ,CAAR,CAAf,C,CAAkD;;AAElD;AACA,IAAMC,eAAeF,OAAOE,YAAP,CAAoB;AACvC;AACA;AACA;AACA;AACAC,gBAAc,YALyB;AAMvCC,WAAS;AAN8B,CAApB,CAArB;;AASA,IAAMC,gBAAgB,SAAhBA,aAAgB,CAACC,KAAD,EAAQC,QAAR,EAAqB;AACzC,MAAIC,eAAe,IAAnB;AACA,MAAI,CAACD,SAASE,MAAd,EAAsB;AACpBF,aAASE,MAAT,GAAkB,EAAlB;AACD,GAFD,MAEO;AACL,WAAOF,QAAP;AACD;AACD,MAAIA,SAASG,OAAT,IAAoBH,SAASG,OAAT,CAAiB,CAAjB,CAAxB,EAA6C;AAC3C,QAAIC,SAASJ,SAASG,OAAT,CAAiB,CAAjB,CAAb;AACA;AACA;AACA;AACA;AACA;AACA,QAAIC,OAAOC,UAAP,IAAqB,IAAzB,EAA+B;AAC7BJ,qBAAe,kCAAkCG,OAAOA,MAAxD;AACD,KAFD,MAEO,IAAIA,OAAOC,UAAP,IAAqB,GAAzB,EAA8B;AACnCJ,qBAAe,6BAA6BG,OAAOA,MAAnD;AACD,KAFM,MAEA;AACLH,qBAAe,kCAAf;AACD;AACF;AACDD,WAASE,MAAT,CAAgBI,IAAhB,GAAuBL,YAAvB;AACA,SAAOD,QAAP;AACD,CAxBD;;AA0BAO,OAAOC,OAAP,GAAiB,UAASC,GAAT,EAAc;;AAE7BA,MAAIC,IAAJ,CAAS,cAAT,EAAyB,UAACC,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AAC3C,QAAMC,YAAYC,QAAQC,GAAR,CAAYC,YAAZ,IAA4B,gBAA9C;AACA,QAAI,CAACH,SAAD,IAAcA,cAAc,gBAAhC,EAAkD;AAChD,aAAOF,IAAIM,IAAJ,CAAS;AACdhB,gBAAQ;AACNI,gBAAM,0GACJ,qFADI,GAEJ,iDAFI,GAGJ,qEAHI,GAIJ,2HAJI,GAKJ;AANI;AADM,OAAT,CAAP;AAUD;AACD,QAAMa,UAAU;AACdC,oBAAcN,SADA;AAEdO,eAASV,IAAIW,IAAJ,CAASD,OAAT,IAAoB,EAFf;AAGdtB,aAAOY,IAAIW,IAAJ,CAASvB,KAAT,IAAkB;AAHX,KAAhB;;AAMA;AACAJ,iBAAa4B,OAAb,CAAqBJ,OAArB,EAA8B,UAACK,KAAD,EAAQC,IAAR,EAAiB;AAC7C,UAAID,KAAJ,EAAW;AACT,eAAOX,KAAKW,KAAL,CAAP;AACD;AACD,aAAOZ,IAAIM,IAAJ,CAASpB,cAAcqB,OAAd,EAAuBM,IAAvB,CAAT,CAAP;AACD,KALD;AAMD,GA3BD;AA4BD,CA9BD,C","file":"app/routes/conversation.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 6);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 8124203d66429dbde525","module.exports = require(\"watson-developer-cloud\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"watson-developer-cloud\"\n// module id = 0\n// module chunks = 0 1 3 4 5","const watson = require('watson-developer-cloud'); // watson sdk\n\n// Create the service wrapper\nconst conversation = watson.conversation({\n  // If unspecified here, the CONVERSATION_USERNAME and CONVERSATION_PASSWORD env properties will be checked\n  // After that, the SDK will fall back to the bluemix-provided VCAP_SERVICES environment property\n  // username: '<username>',\n  // password: '<password>',\n  version_date: '2016-10-21',\n  version: 'v1'\n});\n\nconst updateMessage = (input, response) => {\n  var responseText = null;\n  if (!response.output) {\n    response.output = {};\n  } else {\n    return response;\n  }\n  if (response.intents && response.intents[0]) {\n    var intent = response.intents[0];\n    // Depending on the confidence of the response the app can return different messages.\n    // The confidence will vary depending on how well the system is trained. The service will always try to assign\n    // a class/intent to the input. If the confidence is low, then it suggests the service is unsure of the\n    // user's intent . In these cases it is usually best to return a disambiguation message\n    // ('I did not understand your intent, please rephrase your question', etc..)\n    if (intent.confidence >= 0.75) {\n      responseText = 'I understood your intent was ' + intent.intent;\n    } else if (intent.confidence >= 0.5) {\n      responseText = 'I think your intent was ' + intent.intent;\n    } else {\n      responseText = 'I did not understand your intent';\n    }\n  }\n  response.output.text = responseText;\n  return response;\n};\n\nmodule.exports = function(app) {\n\n  app.post('/api/message', (req, res, next) => {\n    const workspace = process.env.WORKSPACE_ID || '<workspace-id>';\n    if (!workspace || workspace === '<workspace-id>') {\n      return res.json({\n        output: {\n          text: 'The app has not been configured with a <b>WORKSPACE_ID</b> environment variable. Please refer to the ' +\n            '<a href=\"https://github.com/watson-developer-cloud/conversation-simple\">README</a> ' +\n            'documentation on how to set this variable. <br>' +\n            'Once a workspace has been defined the intents may be imported from ' +\n            '<a href=\"https://github.com/watson-developer-cloud/conversation-simple/blob/master/training/car_workspace.json\">here</a> ' +\n            'in order to get a working application.'\n        }\n      });\n    }\n    const payload = {\n      workspace_id: workspace,\n      context: req.body.context || {},\n      input: req.body.input || {}\n    };\n\n    // Send the input to the conversation service\n    conversation.message(payload, (error, data) => {\n      if (error) {\n        return next(error);\n      }\n      return res.json(updateMessage(payload, data));\n    });\n  });\n};\n\n\n\n// WEBPACK FOOTER //\n// ./resources/assets/js/routes/conversation.js"],"sourceRoot":""}