{"version":3,"sources":["webpack:///webpack/bootstrap 9b8ce6eb770bf45fddb9","webpack:///external \"watson-developer-cloud\"","webpack:///external \"express\"","webpack:///external \"vcap_services\"","webpack:///./resources/assets/js/routes/api.js","webpack:///./resources/assets/js/routes/web.js","webpack:///external \"fs\"","webpack:///./resources/assets/js/routes/conversation.js","webpack:///./resources/assets/js/routes/speech-to-text.js","webpack:///./resources/assets/js/routes/text-to-speech.js","webpack:///./resources/assets/js/app.js","webpack:///external \"dotenv\"","webpack:///external \"body-parser\"","webpack:///external \"path\""],"names":["apiRoutes","webRoutes","get","res","render","watson","require","conversation","version_date","version","updateMessage","input","response","responseText","output","intents","intent","confidence","text","module","exports","app","post","req","next","workspace","process","env","WORKSPACE_ID","json","payload","workspace_id","context","body","message","error","data","vcapServices","credentials","Object","assign","username","SPEECH_TO_TEXT_USERNAME","password","SPEECH_TO_TEXT_PASSWORD","url","SPEECH_TO_TEXT_URL","getCredentials","authorizationService","authorization","console","warn","initTextToSpeech","getToken","token","code","send","TEXT_TO_SPEECH_USERNAME","TEXT_TO_SPEECH_PASSWORD","TEXT_TO_SPEECH_URL","initSpeechToText","config","set","use","static","urlencoded","extended"],"mappings":"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","file":"app/app.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 9);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 9b8ce6eb770bf45fddb9","module.exports = require(\"watson-developer-cloud\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"watson-developer-cloud\"\n// module id = 0\n// module chunks = 0 1 3 4 5","module.exports = require(\"express\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"express\"\n// module id = 1\n// module chunks = 0 1 2 6","module.exports = require(\"vcap_services\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"vcap_services\"\n// module id = 2\n// module chunks = 0 1 3 4","// This will hold all the API routes for the application\nimport express from 'express';\n\n// dependencies\nconst apiRoutes = express();\n\n\nexport default apiRoutes;\n\n\n\n\n// WEBPACK FOOTER //\n// ./resources/assets/js/routes/api.js","import express from 'express';\nimport fs from 'fs';\n\nconst webRoutes = express();\n\nwebRoutes.get('/',function(){\n\n\tres.render('views/index');\n\n});\n\nexport default webRoutes;\n\n\n// WEBPACK FOOTER //\n// ./resources/assets/js/routes/web.js","module.exports = require(\"fs\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"fs\"\n// module id = 5\n// module chunks = 0 1 2","const watson = require('watson-developer-cloud'); // watson sdk\n\n// Create the service wrapper\nconst conversation = watson.conversation({\n  // If unspecified here, the CONVERSATION_USERNAME and CONVERSATION_PASSWORD env properties will be checked\n  // After that, the SDK will fall back to the bluemix-provided VCAP_SERVICES environment property\n  // username: '<username>',\n  // password: '<password>',\n  version_date: '2016-10-21',\n  version: 'v1'\n});\n\nconst updateMessage = (input, response) => {\n  var responseText = null;\n  if (!response.output) {\n    response.output = {};\n  } else {\n    return response;\n  }\n  if (response.intents && response.intents[0]) {\n    var intent = response.intents[0];\n    // Depending on the confidence of the response the app can return different messages.\n    // The confidence will vary depending on how well the system is trained. The service will always try to assign\n    // a class/intent to the input. If the confidence is low, then it suggests the service is unsure of the\n    // user's intent . In these cases it is usually best to return a disambiguation message\n    // ('I did not understand your intent, please rephrase your question', etc..)\n    if (intent.confidence >= 0.75) {\n      responseText = 'I understood your intent was ' + intent.intent;\n    } else if (intent.confidence >= 0.5) {\n      responseText = 'I think your intent was ' + intent.intent;\n    } else {\n      responseText = 'I did not understand your intent';\n    }\n  }\n  response.output.text = responseText;\n  return response;\n};\n\nmodule.exports = function(app) {\n\n  app.post('/api/message', (req, res, next) => {\n    const workspace = process.env.WORKSPACE_ID || '<workspace-id>';\n    if (!workspace || workspace === '<workspace-id>') {\n      return res.json({\n        output: {\n          text: 'The app has not been configured with a <b>WORKSPACE_ID</b> environment variable. Please refer to the ' +\n            '<a href=\"https://github.com/watson-developer-cloud/conversation-simple\">README</a> ' +\n            'documentation on how to set this variable. <br>' +\n            'Once a workspace has been defined the intents may be imported from ' +\n            '<a href=\"https://github.com/watson-developer-cloud/conversation-simple/blob/master/training/car_workspace.json\">here</a> ' +\n            'in order to get a working application.'\n        }\n      });\n    }\n    const payload = {\n      workspace_id: workspace,\n      context: req.body.context || {},\n      input: req.body.input || {}\n    };\n\n    // Send the input to the conversation service\n    conversation.message(payload, (error, data) => {\n      if (error) {\n        return next(error);\n      }\n      return res.json(updateMessage(payload, data));\n    });\n  });\n};\n\n\n\n// WEBPACK FOOTER //\n// ./resources/assets/js/routes/conversation.js","const watson = require('watson-developer-cloud');\nconst vcapServices = require('vcap_services');\n\nconst credentials = Object.assign({\n  username: process.env.SPEECH_TO_TEXT_USERNAME,\n  password: process.env.SPEECH_TO_TEXT_PASSWORD,\n  url: process.env.SPEECH_TO_TEXT_URL || 'https://stream.watsonplatform.net/speech-to-text/api',\n  version: 'v1'\n}, vcapServices.getCredentials('speech_to_text'));\n\nconst authorizationService = watson.authorization(credentials);\n\n\n// Inform user that TTS is not configured properly or at all\nif (!credentials || !credentials.username) {\n  // eslint-disable-next-line\n  console.warn('WARNING: The app has not been configured with a SPEECH_TO_TEXT_USERNAME and/or ' +\n    'a SPEECH_TO_TEXT_PASSWORD environment variable. If you wish to have text to speech ' +\n    'in your working application, please refer to the https://github.com/watson-developer-cloud/car-dashboard ' +\n    'README documentation on how to set these variables.');\n}\n\n\nmodule.exports = function initTextToSpeech(app) {\n  app.get('/api/speech-to-text/token', (req, res, next) =>\n    authorizationService.getToken({ url: credentials.url }, (error, token) => {\n      if (error) {\n        if (error.code !== 401)\n          return next(error);\n      } else {\n        res.send(token);\n      }\n    })\n  );\n};\n\n\n\n// WEBPACK FOOTER //\n// ./resources/assets/js/routes/speech-to-text.js","const watson = require('watson-developer-cloud');\nconst vcapServices = require('vcap_services');\n\nconst credentials = Object.assign({\n  username: process.env.TEXT_TO_SPEECH_USERNAME,\n  password: process.env.TEXT_TO_SPEECH_PASSWORD,\n  url: process.env.TEXT_TO_SPEECH_URL || 'https://stream.watsonplatform.net/text-to-speech/api',\n  version: 'v1'\n}, vcapServices.getCredentials('text_to_speech'));\n\nconst authorizationService = watson.authorization(credentials);\n\n\n// Inform user that TTS is not configured properly or at all\nif (!credentials || !credentials.username) {\n  // eslint-disable-next-line\n  console.warn('WARNING: The app has not been configured with a TEXT_TO_SPEECH_USERNAME and/or ' +\n    'a TEXT_TO_SPEECH_PASSWORD environment variable. If you wish to have text to speech ' +\n    'in your working application, please refer to the https://github.com/watson-developer-cloud/car-dashboard ' +\n    'README documentation on how to set these variables.');\n}\n\nmodule.exports = function initSpeechToText(app) {\n  app.get('/api/text-to-speech/token', (req, res, next) =>\n    authorizationService.getToken({ url: credentials.url }, (error, token) => {\n      if (error) {\n        if (error.code !== 401)\n          return next(error);\n      } else {\n        res.send(token);\n      }\n    })\n  );\n};\n\n\n\n// WEBPACK FOOTER //\n// ./resources/assets/js/routes/text-to-speech.js","// NPM DEPENDENCIES\nimport dotenv from 'dotenv';\nimport express from 'express';\nimport bodyParser from 'body-parser';\nimport path from 'path';\n\n// CUSTOM FILES\nimport apiRoutes from './routes/api';\nimport webRoutes from './routes/web';\n\n// REQUIRE .env FILE\ndotenv.config();\n\n// NEW EXPRESS APP INSTANTIATION\nconst app = express();\n\n// USE EJS\napp.set('view engine', 'ejs');\n\n// SET UP APP USE\napp.use(express.static('./public'));\napp.use(bodyParser.urlencoded({extended:false}));\napp.use(bodyParser.json());\n\n// Use API routes\napp.use('/api',apiRoutes);\n\n// Use Web routes\napp.use('/',webRoutes);\n\n// Configure the Watson services\nrequire('./routes/conversation')(app);\nrequire('./routes/speech-to-text')(app);\nrequire('./routes/text-to-speech')(app);\n\n// require()\n\nexport default app;\n\n\n// WEBPACK FOOTER //\n// ./resources/assets/js/app.js","module.exports = require(\"dotenv\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"dotenv\"\n// module id = 10\n// module chunks = 0 1","module.exports = require(\"body-parser\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"body-parser\"\n// module id = 11\n// module chunks = 0 1","module.exports = require(\"path\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"path\"\n// module id = 12\n// module chunks = 0 1"],"sourceRoot":""}